// Generated by CoffeeScript 2.6.1
var checkType, pipeLib;

pipeLib = function() {};

checkType = require("icat_checktype");

pipeLib.start = function(fn) {
  var data;
  checkType(arguments, [["function", "asyncfunction", "number", "object"]], "pipeLib.start()");
  data = null;
  if (Object.prototype.toString.call(fn) === "[object Object]") {
    data = {...fn};
    fn = () => {
      return data;
    };
  }
  if (fn.endSign === 1) {
    return fn(this);
  }
  if (fn === 0) {
    return this;
  }
  return (...args) => {
    return {
      to: pipeLib.start.bind(() => {
        return fn(this, ...args);
      }),
      给: pipeLib.start.bind(() => {
        return fn(this, ...args);
      })
    };
  };
};

pipeLib.开始 = pipeLib.start;

pipeLib.print = function(data) {
  console.log(data());
  return data();
};

pipeLib.输出 = pipeLib.print;

pipeLib.printx = async function(data) {
  console.log((await data()));
  return (await data());
};

pipeLib.异步输出 = pipeLib.printx;

pipeLib.end = (data) => {
  return data;
};

pipeLib.end.endSign = 1;

pipeLib.结束 = pipeLib.end;

/*
 * basic useage
pipeLib.start(()=>[1,2,3,4,5])()
  .to((data)=>
    data = data()
    data.push "hello"
    return data
  )()
  .to((data)=>
    data = data()
    data.shift()
    return data
  )()
  .to(pipeLib.print)()
  .to(pipeLib.end)()

obj1 = pipeLib.start({a:12,b:5})()
opr1 = obj1.to((ref)=>
    data = ref() #ref() -> object {a:12,b5} is reference
    data.c = 20
    data
  )()
opr2 = obj1.to((ref)=>
  data = ref()
  data.d = "hello"
  data
)()

output1 = opr1.to(pipeLib.print)().to(0)()
output2 = opr2.to(pipeLib.print)().to(pipeLib.end)()
output3 = obj1.to(pipeLib.print)().to(0)()
console.log(output1 is output3) #true

#async useage
do->
  await pipeLib.start({data:null})()
    .to((ref)=>
      data = ref()
      data.data = await new Promise (res)=>
        setTimeout =>
          res("async data")
        ,1000
      data
    )()
    .to((ref)=>
      data = await ref()
      console.log data
      data
    )()
    .to(0)()
  console.log(222)
 */
module.exports = pipeLib;
